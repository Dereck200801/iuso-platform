-- ========================================
-- MISE √Ä JOUR : MATRICULE ‚Üí NUM√âRO DE DOSSIER
-- Pour les utilisateurs ayant d√©j√† la table inscrits
-- ========================================

-- V√©rifier si la colonne matricule existe
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'inscrits' 
        AND column_name = 'matricule'
    ) THEN
        -- Renommer la colonne matricule en numero_dossier
        ALTER TABLE inscrits RENAME COLUMN matricule TO numero_dossier;
        
        -- Renommer l'index correspondant
        DROP INDEX IF EXISTS idx_inscrits_matricule;
        CREATE INDEX IF NOT EXISTS idx_inscrits_numero_dossier ON inscrits(numero_dossier);
        
        -- Mettre √† jour la fonction de g√©n√©ration
        DROP FUNCTION IF EXISTS generate_matricule() CASCADE;
        
        -- Supprimer l'ancien trigger
        DROP TRIGGER IF EXISTS trigger_generate_matricule ON inscrits;
        
        RAISE NOTICE '‚úÖ Colonne matricule renomm√©e en numero_dossier';
        RAISE NOTICE '‚úÖ Index mis √† jour';
        RAISE NOTICE '‚úÖ Ancien trigger supprim√©';
    ELSE
        RAISE NOTICE '‚úÖ La colonne numero_dossier existe d√©j√† ou la table n''existe pas encore';
    END IF;
END $$;

-- Cr√©er la nouvelle fonction de g√©n√©ration de num√©ro de dossier
CREATE OR REPLACE FUNCTION generate_numero_dossier()
RETURNS TRIGGER AS $$
DECLARE
    prefix VARCHAR(3);
    year VARCHAR(2);
    counter INTEGER;
    new_numero_dossier VARCHAR(20);
BEGIN
    -- D√©terminer le pr√©fixe selon le cycle
    IF NEW.cycle = 'licence1' THEN
        prefix := 'LIC';
    ELSIF NEW.cycle = 'dut' THEN
        prefix := 'DUT';
    ELSE
        prefix := 'GEN';
    END IF;
    
    -- Ann√©e sur 2 chiffres
    year := TO_CHAR(CURRENT_DATE, 'YY');
    
    -- Trouver le prochain num√©ro disponible
    SELECT COALESCE(MAX(CAST(SUBSTRING(numero_dossier FROM 6) AS INTEGER)), 0) + 1
    INTO counter
    FROM inscrits 
    WHERE numero_dossier LIKE prefix || year || '%';
    
    -- G√©n√©rer le num√©ro de dossier final (ex: LIC24001, DUT24001)
    new_numero_dossier := prefix || year || LPAD(counter::TEXT, 3, '0');
    
    -- Assigner le num√©ro de dossier
    NEW.numero_dossier := new_numero_dossier;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Cr√©er le nouveau trigger
DROP TRIGGER IF EXISTS trigger_generate_numero_dossier ON inscrits;
CREATE TRIGGER trigger_generate_numero_dossier
    BEFORE INSERT ON inscrits
    FOR EACH ROW
    WHEN (NEW.numero_dossier IS NULL OR NEW.numero_dossier = '')
    EXECUTE FUNCTION generate_numero_dossier();

-- Message de confirmation
DO $$
BEGIN
    RAISE NOTICE 'üéâ Mise √† jour termin√©e !';
    RAISE NOTICE '‚úÖ La colonne s''appelle maintenant numero_dossier';
    RAISE NOTICE '‚úÖ Fonction de g√©n√©ration automatique mise √† jour';
    RAISE NOTICE '‚úÖ Trigger configur√© pour la g√©n√©ration automatique';
    RAISE NOTICE 'üöÄ Votre syst√®me utilise maintenant des num√©ros de dossier !';
END $$; 